@model TheResistance.Models.Post

@{
    ViewBag.Title = "Edit";
}

<div class="blogcreatewrapper">
    <h6>Edit</h6>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="bloginputdiv">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="blogtitlediv">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "posttitle" }):
                <div class="blogtitleinputdiv">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "posttitleinput" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="blogtextareadiv">
                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "posttitle" }):
                <div class="blogtextareainputdiv">
                    @Html.TextAreaFor(model => model.Body, new { htmlAttributes = new { @class = "posttextarea" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="submitbuttondiv">
                <div class="">
                    <input type="submit" value="Save" class="submit button btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div class="createnewlink">
        @Html.ActionLink("Back to List", "Index","", new { @class = "buttonsingle" })
    </div>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
